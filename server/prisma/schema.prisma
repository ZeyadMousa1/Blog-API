// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User{
  id String @id @default(uuid())
  username String @db.VarChar(100) 
  email String @db.VarChar(100) @unique
  password String
  bio String 
  profilePhoto  String @default("https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_640.png") 
  photoPublicId String 
  isAdmin Boolean @default(false)
  isAccountVerified Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime? @updatedAt
  posts Post[] @relation("author")
  likes              Like[]     @relation("likedByUser")
  comments Comment[]
}

model Post{
  id String @id @default(uuid())
  title String
  description String
  userId String
  user User @relation("author", fields: [userId], references: [id])
  category String
  image  String?
  imagePublicId String?
  likedBy Like[]  @relation("likedPost")
  comments Comment[]
  createdAt DateTime @default(now())
  updatedAt DateTime? @updatedAt
}

model Like {
  id                 String      @id @default(uuid())
  userId             String
  user               User        @relation("likedByUser", fields: [userId], references: [id])
  postId             String
  post               Post        @relation("likedPost", fields: [postId], references: [id])
  createdAt          DateTime    @default(now())
  updatedAt          DateTime?   @updatedAt

}

model Comment{
  id String @id @default(uuid())
  title String
  postId String
  userId String
  post Post @relation(fields: [postId], references: [id])
  user User @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime? @updatedAt
}


